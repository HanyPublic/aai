	
.Aksaty.Infra.Data.Repository.ProductRepositoryobject+Aksaty.Domain.Interfaces.IProductRepositoryß
:ProductRepository(Aksaty.Infra.Data.Context.AksatyContext)iAksaty.Infra.Data.Repository.ProductRepository.ProductRepository(Aksaty.Infra.Data.Context.AksatyContext)u
!Add(Aksaty.Domain.Models.Product)PAksaty.Infra.Data.Repository.ProductRepository.Add(Aksaty.Domain.Models.Product)ï
1GetAll(Aksaty.Domain.Queries.GetAllProductsQuery)`Aksaty.Infra.Data.Repository.ProductRepository.GetAll(Aksaty.Domain.Queries.GetAllProductsQuery)[
GetById(System.Guid)CAksaty.Infra.Data.Repository.ProductRepository.GetById(System.Guid)è
.GetById(Aksaty.Domain.Queries.GetProductQuery)]Aksaty.Infra.Data.Repository.ProductRepository.GetById(Aksaty.Domain.Queries.GetProductQuery){
$Remove(Aksaty.Domain.Models.Product)SAksaty.Infra.Data.Repository.ProductRepository.Remove(Aksaty.Domain.Models.Product){
$Update(Aksaty.Domain.Models.Product)SAksaty.Infra.Data.Repository.ProductRepository.Update(Aksaty.Domain.Models.Product)E
	Dispose()8Aksaty.Infra.Data.Repository.ProductRepository.Dispose()O
UnitOfWork.get=Aksaty.Infra.Data.Repository.ProductRepository.UnitOfWork.getO
UnitOfWork.set=Aksaty.Infra.Data.Repository.ProductRepository.UnitOfWork.set